version: '3'

services:
  frontend: 
    container_name: 'frontend'
    build: ./frontend
    ports: 
      - '8081:80'
    restart: unless-stopped

  backend:
    container_name: 'backend'
    build: ./backend
    ports: 
      - '4000:3000'
    restart: always
    depends_on:
      - postgres
    env_file: .env
    networks: 
      - backend


  postgres:
    container_name: 'postgres'
    image: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes: 
      - pg_data:/var/lib/postgresql/data
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks: 
      - backend

  adminer:
    container_name: 'adminer'
    image: adminer
    restart: always
    ports: 
      - '8080:8080'
    restart: always
    depends_on:
      - postgres
    networks: 
      - backend

volumes: 
  pg_data:

networks: 
  backend:

  
  